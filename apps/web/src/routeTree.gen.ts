/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ScrobbleRouteImport } from './routes/scrobble'
import { Route as LoadingRouteImport } from './routes/loading'
import { Route as ApikeysRouteImport } from './routes/apikeys'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GoogledriveIndexRouteImport } from './routes/googledrive/index'
import { Route as DropboxIndexRouteImport } from './routes/dropbox/index'
import { Route as ProfileDidRouteImport } from './routes/profile.$did'
import { Route as GoogledriveIdRouteImport } from './routes/googledrive/$id'
import { Route as DropboxIdRouteImport } from './routes/dropbox/$id'
import { Route as DidSongRkeyRouteImport } from './routes/$did.song.$rkey'
import { Route as DidScrobbleRkeyRouteImport } from './routes/$did.scrobble.$rkey'
import { Route as DidPlaylistRkeyRouteImport } from './routes/$did.playlist.$rkey'
import { Route as DidArtistRkeyRouteImport } from './routes/$did.artist.$rkey'
import { Route as DidAlbumRkeyRouteImport } from './routes/$did.album.$rkey'

const ScrobbleRoute = ScrobbleRouteImport.update({
  id: '/scrobble',
  path: '/scrobble',
  getParentRoute: () => rootRouteImport,
} as any)
const LoadingRoute = LoadingRouteImport.update({
  id: '/loading',
  path: '/loading',
  getParentRoute: () => rootRouteImport,
} as any)
const ApikeysRoute = ApikeysRouteImport.update({
  id: '/apikeys',
  path: '/apikeys',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GoogledriveIndexRoute = GoogledriveIndexRouteImport.update({
  id: '/googledrive/',
  path: '/googledrive/',
  getParentRoute: () => rootRouteImport,
} as any)
const DropboxIndexRoute = DropboxIndexRouteImport.update({
  id: '/dropbox/',
  path: '/dropbox/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileDidRoute = ProfileDidRouteImport.update({
  id: '/profile/$did',
  path: '/profile/$did',
  getParentRoute: () => rootRouteImport,
} as any)
const GoogledriveIdRoute = GoogledriveIdRouteImport.update({
  id: '/googledrive/$id',
  path: '/googledrive/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DropboxIdRoute = DropboxIdRouteImport.update({
  id: '/dropbox/$id',
  path: '/dropbox/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DidSongRkeyRoute = DidSongRkeyRouteImport.update({
  id: '/$did/song/$rkey',
  path: '/$did/song/$rkey',
  getParentRoute: () => rootRouteImport,
} as any)
const DidScrobbleRkeyRoute = DidScrobbleRkeyRouteImport.update({
  id: '/$did/scrobble/$rkey',
  path: '/$did/scrobble/$rkey',
  getParentRoute: () => rootRouteImport,
} as any)
const DidPlaylistRkeyRoute = DidPlaylistRkeyRouteImport.update({
  id: '/$did/playlist/$rkey',
  path: '/$did/playlist/$rkey',
  getParentRoute: () => rootRouteImport,
} as any)
const DidArtistRkeyRoute = DidArtistRkeyRouteImport.update({
  id: '/$did/artist/$rkey',
  path: '/$did/artist/$rkey',
  getParentRoute: () => rootRouteImport,
} as any)
const DidAlbumRkeyRoute = DidAlbumRkeyRouteImport.update({
  id: '/$did/album/$rkey',
  path: '/$did/album/$rkey',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/apikeys': typeof ApikeysRoute
  '/loading': typeof LoadingRoute
  '/scrobble': typeof ScrobbleRoute
  '/dropbox/$id': typeof DropboxIdRoute
  '/googledrive/$id': typeof GoogledriveIdRoute
  '/profile/$did': typeof ProfileDidRoute
  '/dropbox': typeof DropboxIndexRoute
  '/googledrive': typeof GoogledriveIndexRoute
  '/$did/album/$rkey': typeof DidAlbumRkeyRoute
  '/$did/artist/$rkey': typeof DidArtistRkeyRoute
  '/$did/playlist/$rkey': typeof DidPlaylistRkeyRoute
  '/$did/scrobble/$rkey': typeof DidScrobbleRkeyRoute
  '/$did/song/$rkey': typeof DidSongRkeyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/apikeys': typeof ApikeysRoute
  '/loading': typeof LoadingRoute
  '/scrobble': typeof ScrobbleRoute
  '/dropbox/$id': typeof DropboxIdRoute
  '/googledrive/$id': typeof GoogledriveIdRoute
  '/profile/$did': typeof ProfileDidRoute
  '/dropbox': typeof DropboxIndexRoute
  '/googledrive': typeof GoogledriveIndexRoute
  '/$did/album/$rkey': typeof DidAlbumRkeyRoute
  '/$did/artist/$rkey': typeof DidArtistRkeyRoute
  '/$did/playlist/$rkey': typeof DidPlaylistRkeyRoute
  '/$did/scrobble/$rkey': typeof DidScrobbleRkeyRoute
  '/$did/song/$rkey': typeof DidSongRkeyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/apikeys': typeof ApikeysRoute
  '/loading': typeof LoadingRoute
  '/scrobble': typeof ScrobbleRoute
  '/dropbox/$id': typeof DropboxIdRoute
  '/googledrive/$id': typeof GoogledriveIdRoute
  '/profile/$did': typeof ProfileDidRoute
  '/dropbox/': typeof DropboxIndexRoute
  '/googledrive/': typeof GoogledriveIndexRoute
  '/$did/album/$rkey': typeof DidAlbumRkeyRoute
  '/$did/artist/$rkey': typeof DidArtistRkeyRoute
  '/$did/playlist/$rkey': typeof DidPlaylistRkeyRoute
  '/$did/scrobble/$rkey': typeof DidScrobbleRkeyRoute
  '/$did/song/$rkey': typeof DidSongRkeyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/apikeys'
    | '/loading'
    | '/scrobble'
    | '/dropbox/$id'
    | '/googledrive/$id'
    | '/profile/$did'
    | '/dropbox'
    | '/googledrive'
    | '/$did/album/$rkey'
    | '/$did/artist/$rkey'
    | '/$did/playlist/$rkey'
    | '/$did/scrobble/$rkey'
    | '/$did/song/$rkey'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/apikeys'
    | '/loading'
    | '/scrobble'
    | '/dropbox/$id'
    | '/googledrive/$id'
    | '/profile/$did'
    | '/dropbox'
    | '/googledrive'
    | '/$did/album/$rkey'
    | '/$did/artist/$rkey'
    | '/$did/playlist/$rkey'
    | '/$did/scrobble/$rkey'
    | '/$did/song/$rkey'
  id:
    | '__root__'
    | '/'
    | '/apikeys'
    | '/loading'
    | '/scrobble'
    | '/dropbox/$id'
    | '/googledrive/$id'
    | '/profile/$did'
    | '/dropbox/'
    | '/googledrive/'
    | '/$did/album/$rkey'
    | '/$did/artist/$rkey'
    | '/$did/playlist/$rkey'
    | '/$did/scrobble/$rkey'
    | '/$did/song/$rkey'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApikeysRoute: typeof ApikeysRoute
  LoadingRoute: typeof LoadingRoute
  ScrobbleRoute: typeof ScrobbleRoute
  DropboxIdRoute: typeof DropboxIdRoute
  GoogledriveIdRoute: typeof GoogledriveIdRoute
  ProfileDidRoute: typeof ProfileDidRoute
  DropboxIndexRoute: typeof DropboxIndexRoute
  GoogledriveIndexRoute: typeof GoogledriveIndexRoute
  DidAlbumRkeyRoute: typeof DidAlbumRkeyRoute
  DidArtistRkeyRoute: typeof DidArtistRkeyRoute
  DidPlaylistRkeyRoute: typeof DidPlaylistRkeyRoute
  DidScrobbleRkeyRoute: typeof DidScrobbleRkeyRoute
  DidSongRkeyRoute: typeof DidSongRkeyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/scrobble': {
      id: '/scrobble'
      path: '/scrobble'
      fullPath: '/scrobble'
      preLoaderRoute: typeof ScrobbleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/loading': {
      id: '/loading'
      path: '/loading'
      fullPath: '/loading'
      preLoaderRoute: typeof LoadingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apikeys': {
      id: '/apikeys'
      path: '/apikeys'
      fullPath: '/apikeys'
      preLoaderRoute: typeof ApikeysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/googledrive/': {
      id: '/googledrive/'
      path: '/googledrive'
      fullPath: '/googledrive'
      preLoaderRoute: typeof GoogledriveIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dropbox/': {
      id: '/dropbox/'
      path: '/dropbox'
      fullPath: '/dropbox'
      preLoaderRoute: typeof DropboxIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$did': {
      id: '/profile/$did'
      path: '/profile/$did'
      fullPath: '/profile/$did'
      preLoaderRoute: typeof ProfileDidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/googledrive/$id': {
      id: '/googledrive/$id'
      path: '/googledrive/$id'
      fullPath: '/googledrive/$id'
      preLoaderRoute: typeof GoogledriveIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dropbox/$id': {
      id: '/dropbox/$id'
      path: '/dropbox/$id'
      fullPath: '/dropbox/$id'
      preLoaderRoute: typeof DropboxIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$did/song/$rkey': {
      id: '/$did/song/$rkey'
      path: '/$did/song/$rkey'
      fullPath: '/$did/song/$rkey'
      preLoaderRoute: typeof DidSongRkeyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$did/scrobble/$rkey': {
      id: '/$did/scrobble/$rkey'
      path: '/$did/scrobble/$rkey'
      fullPath: '/$did/scrobble/$rkey'
      preLoaderRoute: typeof DidScrobbleRkeyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$did/playlist/$rkey': {
      id: '/$did/playlist/$rkey'
      path: '/$did/playlist/$rkey'
      fullPath: '/$did/playlist/$rkey'
      preLoaderRoute: typeof DidPlaylistRkeyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$did/artist/$rkey': {
      id: '/$did/artist/$rkey'
      path: '/$did/artist/$rkey'
      fullPath: '/$did/artist/$rkey'
      preLoaderRoute: typeof DidArtistRkeyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$did/album/$rkey': {
      id: '/$did/album/$rkey'
      path: '/$did/album/$rkey'
      fullPath: '/$did/album/$rkey'
      preLoaderRoute: typeof DidAlbumRkeyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApikeysRoute: ApikeysRoute,
  LoadingRoute: LoadingRoute,
  ScrobbleRoute: ScrobbleRoute,
  DropboxIdRoute: DropboxIdRoute,
  GoogledriveIdRoute: GoogledriveIdRoute,
  ProfileDidRoute: ProfileDidRoute,
  DropboxIndexRoute: DropboxIndexRoute,
  GoogledriveIndexRoute: GoogledriveIndexRoute,
  DidAlbumRkeyRoute: DidAlbumRkeyRoute,
  DidArtistRkeyRoute: DidArtistRkeyRoute,
  DidPlaylistRkeyRoute: DidPlaylistRkeyRoute,
  DidScrobbleRkeyRoute: DidScrobbleRkeyRoute,
  DidSongRkeyRoute: DidSongRkeyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
