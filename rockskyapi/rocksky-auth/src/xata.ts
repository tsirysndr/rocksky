// Generated by Xata Codegen 0.30.1. Please do not edit.
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";
import { buildClient } from "@xata.io/client";

const tables = [
  {
    name: "album_tags",
    checkConstraints: {
      album_tags_xata_id_length_xata_id: {
        name: "album_tags_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      album_id_link: {
        name: "album_id_link",
        columns: ["album_id"],
        referencedTable: "albums",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      tag_id_link: {
        name: "tag_id_link",
        columns: ["tag_id"],
        referencedTable: "tags",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_album_tags_xata_id_key: {
        name: "_pgroll_new_album_tags_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "album_id",
        type: "link",
        link: { table: "albums" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"albums"}',
      },
      {
        name: "tag_id",
        type: "link",
        link: { table: "tags" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tags"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "album_tracks",
    checkConstraints: {
      album_tracks_xata_id_length_xata_id: {
        name: "album_tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      album_id_link: {
        name: "album_id_link",
        columns: ["album_id"],
        referencedTable: "albums",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_album_tracks_xata_id_key: {
        name: "_pgroll_new_album_tracks_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "album_id",
        type: "link",
        link: { table: "albums" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"albums"}',
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "albums",
    checkConstraints: {
      albums_xata_id_length_xata_id: {
        name: "albums_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_albums_xata_id_key: {
        name: "_pgroll_new_albums_xata_id_key",
        columns: ["xata_id"],
      },
      albums__pgroll_new_sha256_key: {
        name: "albums__pgroll_new_sha256_key",
        columns: ["sha256"],
      },
      albums__pgroll_new_uri_key: {
        name: "albums__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "album_art",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "artist",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "release_date",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sha256",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "spotify_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "tidal_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
      {
        name: "year",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "youtube_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "artist_albums",
    checkConstraints: {
      artist_albums_xata_id_length_xata_id: {
        name: "artist_albums_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      album_id_link: {
        name: "album_id_link",
        columns: ["album_id"],
        referencedTable: "albums",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      artist_id_link: {
        name: "artist_id_link",
        columns: ["artist_id"],
        referencedTable: "artists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_artist_albums_xata_id_key: {
        name: "_pgroll_new_artist_albums_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "album_id",
        type: "link",
        link: { table: "albums" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"albums"}',
      },
      {
        name: "artist_id",
        type: "link",
        link: { table: "artists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"artists"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "artist_tags",
    checkConstraints: {
      artist_tags_xata_id_length_xata_id: {
        name: "artist_tags_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      artist_id_link: {
        name: "artist_id_link",
        columns: ["artist_id"],
        referencedTable: "artists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      tag_id_link: {
        name: "tag_id_link",
        columns: ["tag_id"],
        referencedTable: "tags",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_artist_tags_xata_id_key: {
        name: "_pgroll_new_artist_tags_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "artist_id",
        type: "link",
        link: { table: "artists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"artists"}',
      },
      {
        name: "tag_id",
        type: "link",
        link: { table: "tags" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tags"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "artist_tracks",
    checkConstraints: {
      artist_tracks_xata_id_length_xata_id: {
        name: "artist_tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      artist_id_link: {
        name: "artist_id_link",
        columns: ["artist_id"],
        referencedTable: "artists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_artist_tracks_xata_id_key: {
        name: "_pgroll_new_artist_tracks_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "artist_id",
        type: "link",
        link: { table: "artists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"artists"}',
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "artists",
    checkConstraints: {
      artists_xata_id_length_xata_id: {
        name: "artists_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_artists_xata_id_key: {
        name: "_pgroll_new_artists_xata_id_key",
        columns: ["xata_id"],
      },
      artists__pgroll_new_sha256_key: {
        name: "artists__pgroll_new_sha256_key",
        columns: ["sha256"],
      },
      artists__pgroll_new_uri_key: {
        name: "artists__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "biography",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "born",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "born_in",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "died",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "picture",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sha256",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "loved_tracks",
    checkConstraints: {
      loved_tracks_xata_id_length_xata_id: {
        name: "loved_tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_loved_tracks_xata_id_key: {
        name: "_pgroll_new_loved_tracks_xata_id_key",
        columns: ["xata_id"],
      },
      loved_tracks__pgroll_new_uri_key: {
        name: "loved_tracks__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "playlist_tracks",
    checkConstraints: {
      playlist_tracks_xata_id_length_xata_id: {
        name: "playlist_tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      playlist_id_link: {
        name: "playlist_id_link",
        columns: ["playlist_id"],
        referencedTable: "playlists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_playlist_tracks_xata_id_key: {
        name: "_pgroll_new_playlist_tracks_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "playlist_id",
        type: "link",
        link: { table: "playlists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"playlists"}',
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "playlists",
    checkConstraints: {
      playlists_xata_id_length_xata_id: {
        name: "playlists_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_playlists_xata_id_key: {
        name: "_pgroll_new_playlists_xata_id_key",
        columns: ["xata_id"],
      },
      playlists__pgroll_new_uri_key: {
        name: "playlists__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "radios",
    checkConstraints: {
      radios_xata_id_length_xata_id: {
        name: "radios_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_radios_xata_id_key: {
        name: "_pgroll_new_radios_xata_id_key",
        columns: ["xata_id"],
      },
      radios__pgroll_new_uri_key: {
        name: "radios__pgroll_new_uri_key",
        columns: ["uri"],
      },
      radios__pgroll_new_url_key: {
        name: "radios__pgroll_new_url_key",
        columns: ["url"],
      },
    },
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "genre",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "logo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "url",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "website",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "scrobbles",
    checkConstraints: {
      scrobbles_xata_id_length_xata_id: {
        name: "scrobbles_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      album_id_link: {
        name: "album_id_link",
        columns: ["album_id"],
        referencedTable: "albums",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      artist_id_link: {
        name: "artist_id_link",
        columns: ["artist_id"],
        referencedTable: "artists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_scrobbles_xata_id_key: {
        name: "_pgroll_new_scrobbles_xata_id_key",
        columns: ["xata_id"],
      },
      scrobbles__pgroll_new_uri_key: {
        name: "scrobbles__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "album_id",
        type: "link",
        link: { table: "albums" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"albums"}',
      },
      {
        name: "artist_id",
        type: "link",
        link: { table: "artists" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"artists"}',
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "shouts",
    checkConstraints: {
      shouts_xata_id_length_xata_id: {
        name: "shouts_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_shouts_xata_id_key: {
        name: "_pgroll_new_shouts_xata_id_key",
        columns: ["xata_id"],
      },
      shouts__pgroll_new_uri_key: {
        name: "shouts__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "content",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "tags",
    checkConstraints: {
      tags_xata_id_length_xata_id: {
        name: "tags_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_tags_xata_id_key: {
        name: "_pgroll_new_tags_xata_id_key",
        columns: ["xata_id"],
      },
      tags__pgroll_new_name_key: {
        name: "tags__pgroll_new_name_key",
        columns: ["name"],
      },
    },
    columns: [
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "track_tags",
    checkConstraints: {
      track_tags_xata_id_length_xata_id: {
        name: "track_tags_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      tag_id_link: {
        name: "tag_id_link",
        columns: ["tag_id"],
        referencedTable: "tags",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_track_tags_xata_id_key: {
        name: "_pgroll_new_track_tags_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "tag_id",
        type: "link",
        link: { table: "tags" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tags"}',
      },
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "tracks",
    checkConstraints: {
      tracks_xata_id_length_xata_id: {
        name: "tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_tracks_xata_id_key: {
        name: "_pgroll_new_tracks_xata_id_key",
        columns: ["xata_id"],
      },
      tracks__pgroll_new_mb_id_key: {
        name: "tracks__pgroll_new_mb_id_key",
        columns: ["mb_id"],
      },
      tracks__pgroll_new_sha256_key: {
        name: "tracks__pgroll_new_sha256_key",
        columns: ["sha256"],
      },
      tracks__pgroll_new_uri_key: {
        name: "tracks__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "album",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "album_art",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "album_artist",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "artist",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "composer",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "copyright_message",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "disc_number",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "duration",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "genre",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "lyrics",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "mb_id",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sha256",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "spotify_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "tidal_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "track_number",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
      {
        name: "youtube_link",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "user_albums",
    checkConstraints: {
      user_albums_xata_id_length_xata_id: {
        name: "user_albums_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      album_id_link: {
        name: "album_id_link",
        columns: ["album_id"],
        referencedTable: "albums",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_user_albums_xata_id_key: {
        name: "_pgroll_new_user_albums_xata_id_key",
        columns: ["xata_id"],
      },
      user_albums__pgroll_new_uri_key: {
        name: "user_albums__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "album_id",
        type: "link",
        link: { table: "albums" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"albums"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "user_artists",
    checkConstraints: {
      user_artists_xata_id_length_xata_id: {
        name: "user_artists_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      artist_id_link: {
        name: "artist_id_link",
        columns: ["artist_id"],
        referencedTable: "artists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_user_artists_xata_id_key: {
        name: "_pgroll_new_user_artists_xata_id_key",
        columns: ["xata_id"],
      },
      user_artists__pgroll_new_uri_key: {
        name: "user_artists__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "artist_id",
        type: "link",
        link: { table: "artists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"artists"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "user_playlists",
    checkConstraints: {
      user_playlists_xata_id_length_xata_id: {
        name: "user_playlists_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      playlist_id_link: {
        name: "playlist_id_link",
        columns: ["playlist_id"],
        referencedTable: "playlists",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_user_playlists_xata_id_key: {
        name: "_pgroll_new_user_playlists_xata_id_key",
        columns: ["xata_id"],
      },
      user_playlists__pgroll_new_uri_key: {
        name: "user_playlists__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "playlist_id",
        type: "link",
        link: { table: "playlists" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"playlists"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "user_tracks",
    checkConstraints: {
      user_tracks_xata_id_length_xata_id: {
        name: "user_tracks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      track_id_link: {
        name: "track_id_link",
        columns: ["track_id"],
        referencedTable: "tracks",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_user_tracks_xata_id_key: {
        name: "_pgroll_new_user_tracks_xata_id_key",
        columns: ["xata_id"],
      },
      user_tracks__pgroll_new_uri_key: {
        name: "user_tracks__pgroll_new_uri_key",
        columns: ["uri"],
      },
    },
    columns: [
      {
        name: "track_id",
        type: "link",
        link: { table: "tracks" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"tracks"}',
      },
      {
        name: "uri",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "users" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "users",
    checkConstraints: {
      users_xata_id_length_xata_id: {
        name: "users_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_users_xata_id_key: {
        name: "_pgroll_new_users_xata_id_key",
        columns: ["xata_id"],
      },
      users__pgroll_new_did_key: {
        name: "users__pgroll_new_did_key",
        columns: ["did"],
      },
      users__pgroll_new_handle_key: {
        name: "users__pgroll_new_handle_key",
        columns: ["handle"],
      },
    },
    columns: [
      {
        name: "avatar",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "did",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "display_name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "handle",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type AlbumTags = InferredTypes["album_tags"];
export type AlbumTagsRecord = AlbumTags & XataRecord;

export type AlbumTracks = InferredTypes["album_tracks"];
export type AlbumTracksRecord = AlbumTracks & XataRecord;

export type Albums = InferredTypes["albums"];
export type AlbumsRecord = Albums & XataRecord;

export type ArtistAlbums = InferredTypes["artist_albums"];
export type ArtistAlbumsRecord = ArtistAlbums & XataRecord;

export type ArtistTags = InferredTypes["artist_tags"];
export type ArtistTagsRecord = ArtistTags & XataRecord;

export type ArtistTracks = InferredTypes["artist_tracks"];
export type ArtistTracksRecord = ArtistTracks & XataRecord;

export type Artists = InferredTypes["artists"];
export type ArtistsRecord = Artists & XataRecord;

export type LovedTracks = InferredTypes["loved_tracks"];
export type LovedTracksRecord = LovedTracks & XataRecord;

export type PlaylistTracks = InferredTypes["playlist_tracks"];
export type PlaylistTracksRecord = PlaylistTracks & XataRecord;

export type Playlists = InferredTypes["playlists"];
export type PlaylistsRecord = Playlists & XataRecord;

export type Radios = InferredTypes["radios"];
export type RadiosRecord = Radios & XataRecord;

export type Scrobbles = InferredTypes["scrobbles"];
export type ScrobblesRecord = Scrobbles & XataRecord;

export type Shouts = InferredTypes["shouts"];
export type ShoutsRecord = Shouts & XataRecord;

export type Tags = InferredTypes["tags"];
export type TagsRecord = Tags & XataRecord;

export type TrackTags = InferredTypes["track_tags"];
export type TrackTagsRecord = TrackTags & XataRecord;

export type Tracks = InferredTypes["tracks"];
export type TracksRecord = Tracks & XataRecord;

export type UserAlbums = InferredTypes["user_albums"];
export type UserAlbumsRecord = UserAlbums & XataRecord;

export type UserArtists = InferredTypes["user_artists"];
export type UserArtistsRecord = UserArtists & XataRecord;

export type UserPlaylists = InferredTypes["user_playlists"];
export type UserPlaylistsRecord = UserPlaylists & XataRecord;

export type UserTracks = InferredTypes["user_tracks"];
export type UserTracksRecord = UserTracks & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  album_tags: AlbumTagsRecord;
  album_tracks: AlbumTracksRecord;
  albums: AlbumsRecord;
  artist_albums: ArtistAlbumsRecord;
  artist_tags: ArtistTagsRecord;
  artist_tracks: ArtistTracksRecord;
  artists: ArtistsRecord;
  loved_tracks: LovedTracksRecord;
  playlist_tracks: PlaylistTracksRecord;
  playlists: PlaylistsRecord;
  radios: RadiosRecord;
  scrobbles: ScrobblesRecord;
  shouts: ShoutsRecord;
  tags: TagsRecord;
  track_tags: TrackTagsRecord;
  tracks: TracksRecord;
  user_albums: UserAlbumsRecord;
  user_artists: UserArtistsRecord;
  user_playlists: UserPlaylistsRecord;
  user_tracks: UserTracksRecord;
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://xata.rocksky.app/db/rocksky",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
